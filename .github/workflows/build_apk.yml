name: Build InvoiceApp APK

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            python3-pip \
            python3-setuptools \
            git \
            zip \
            unzip \
            openjdk-17-jdk \
            libncurses6 \
            libstdc++6 \
            libffi-dev \
            libssl-dev \
            zlib1g \
            libsqlite3-dev \
            libjpeg-dev \
            wget

      - name: Set up Android SDK
        run: |
          # Create Android SDK directory
          mkdir -p $HOME/android-sdk
          cd $HOME/android-sdk

          # Download and extract command line tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          unzip -q cmdline-tools.zip
          mkdir -p cmdline-tools/latest
          mv cmdline-tools/* cmdline-tools/latest/ || true

          export ANDROID_HOME=$HOME/android-sdk
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH

          # Accept all SDK licenses automatically
          yes | sdkmanager --sdk_root=$ANDROID_HOME --licenses || true

          # Get the latest build tools version dynamically
          LATEST_BUILD_TOOLS=$(sdkmanager --list | grep "build-tools;" | tail -1 | awk '{print $1}' | cut -d';' -f2)
          echo "Latest Build Tools: $LATEST_BUILD_TOOLS"

          # Install SDK components dynamically
          yes | sdkmanager --sdk_root=$ANDROID_HOME \
              "platforms;android-34" \
              "build-tools;${LATEST_BUILD_TOOLS}" \
              "platform-tools"

          echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
          echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "LATEST_BUILD_TOOLS=$LATEST_BUILD_TOOLS" >> $GITHUB_ENV

      - name: Install Buildozer
        run: |
          pip install --upgrade pip
          pip install buildozer cython

      - name: Update Buildozer spec dynamically
        run: |
          if grep -q "^android.build_tools_version" buildozer.spec; then
            sed -i "s/^android.build_tools_version.*/android.build_tools_version = $LATEST_BUILD_TOOLS/" buildozer.spec
          else
            echo "android.build_tools_version = $LATEST_BUILD_TOOLS" >> buildozer.spec
          fi

      - name: Build APK
        run: |
          buildozer -v android debug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: InvoiceApp-APK
          path: bin/*.apk