name: Build Android APK

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Install system dependencies
      - name: Install system dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            python3-pip python3-setuptools build-essential \
            git zip unzip openjdk-17-jdk wget \
            libffi-dev libssl-dev zlib1g libncurses6 libstdc++6 libsqlite3-dev libjpeg-dev

      # 3️⃣ Add build script
      - name: Create build script
        run: |
          cat > build_apk.sh <<'EOF'
          #!/usr/bin/env bash
          set -e

          echo "🚀 Starting Buildozer Android build..."

          # --- Android SDK setup ---
          export ANDROID_HOME=$HOME/android-sdk
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH

          mkdir -p "$ANDROID_HOME/cmdline-tools"
          cd "$ANDROID_HOME"

          if [ ! -d "cmdline-tools/latest" ]; then
            echo "📦 Downloading Android commandline tools..."
            wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O tools.zip
            unzip -q tools.zip -d cmdline-tools-temp
            mkdir -p cmdline-tools/latest
            # Move only the inner content, avoid moving the parent into itself
            mv cmdline-tools-temp/* cmdline-tools/latest/
            rm -rf cmdline-tools-temp tools.zip
          fi

          # --- Accept all licenses ---
          yes | sdkmanager --sdk_root=$ANDROID_HOME --licenses || true

          # --- Install SDK components ---
          LATEST_BUILD_TOOLS=$(sdkmanager --list | grep "build-tools;" | tail -n1 | awk '{print $1}')
          yes | sdkmanager --sdk_root=$ANDROID_HOME \
            "platform-tools" \
            "platforms;android-34" \
            "$LATEST_BUILD_TOOLS" || true

          # --- Go back to project root ---
          cd "$GITHUB_WORKSPACE"

          # --- Install Python dependencies ---
          pip install --upgrade pip
          pip install buildozer cython

          # --- Build APK ---
          echo "🏗️ Building APK..."
          buildozer -v android debug

          # --- Verify APK output ---
          if [ -d "bin" ]; then
            echo "✅ APK built successfully! Contents of bin/:"
            ls -lh bin/
          else
            echo "❌ Build failed: No APK found in bin/"
            exit 1
          fi
          EOF

          chmod +x build_apk.sh

      # 4️⃣ Run the build
      - name: Run Buildozer Android build
        run: ./build_apk.sh

      # 5️⃣ Upload APK artifact
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: InvoiceApp-APK
          path: bin/*.apk